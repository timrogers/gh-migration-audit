name: End to end tests
on:
  workflow_run:
    workflows:
      - "CI"
    types:
      - completed

permissions:
  actions: read
  contents: read
  checks: write

jobs:
  end_to_end_tests_macos:
    name: Run end to end tests (macOS/GitHub.com)
    runs-on: macos-latest
    env:
      check_name: End to end tests (macOS/GitHub.com)

    steps:
      - name: Download macOS binary
        uses: dawidd6/action-download-artifact@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-macos
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make macOS binary executable
        run: chmod +x bin/gh-migration-audit-darwin-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-darwin-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload macOS binary as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: macos_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}
  
  end_to_end_tests_linux:
    name: Run end to end tests (Linux/GitHub.com)
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (Linux/GitHub.com)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migration-audit-linux-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-linux-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-linux-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-linux-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: linux_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_windows:
    name: Run end to end tests (Windows/GitHub.com)
    runs-on: windows-latest
    env:
      check_name: End to end tests (Windows/GitHub.com)

    steps:
      - name: Download Windows binary
        uses: dawidd6/action-download-artifact@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-windows
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Audit a single repo
        run: bin/gh-migration-audit-windows-amd64.exe audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: bin/gh-migration-audit-windows-amd64.exe audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: bin/gh-migration-audit-windows-amd64.exe audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: windows_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_linux_ghes:
    name: Run end to end tests (Linux/GitHub Enterprise Server)
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (Linux/GitHub Enterprise Server)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@e7466d1a7587ed14867642c2ca74b5bcc1e19a2d
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migration-audit-linux-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-linux-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-linux-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-linux-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-github-enterprise-server-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: linux_ghes_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}