name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: ['v**']

permissions:
  actions: read
  contents: read
  checks: write

jobs:
  test_and_lint:
    name: Test and lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: npm run test

      # Upload test results, coverage report and original event as artifacts
      # So we can publish the results in a separate workflow

      # DO NOT MERGE THESE TWO STEPS INTO ONE
      # Upload are done in two different steps otherwise they will share the common base path
      # and the artifacts structure will be odd. Since on the first step we uploads just a file
      # it will be kept in the _root_ of the artifact, while the second step will upload directory structures
      - name: Upload Event
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: testfiles
            retention-days: 1
            path: ${{ github.event_path }}

      - name: Upload Test Results and Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: test-results-and-coverage
            retention-days: 1
            path: |
              test-results/**
              coverage/**

  package:
    name: Package binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x
      - name: Install dependencies
        run: npm ci
      - name: Generate binaries for macOS, Linux and Windows
        run: npm run package
      - name: Rename macOS binary to conform to GitHub CLI extension rules
        run: mv bin/migration-audit-macos bin/gh-migration-audit-darwin-amd64
      - name: Rename Windows binary to conform to GitHub CLI extension rules
        run: mv bin/migration-audit-win.exe bin/gh-migration-audit-windows-amd64.exe
      - name: Rename Linux binary to conform to GitHub CLI extension rules
        run: mv bin/migration-audit-linux bin/gh-migration-audit-linux-amd64
      - name: Upload macOS binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-macos
          path: bin/gh-migration-audit-darwin-amd64
      - name: Upload Linux binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-linux
          path: bin/gh-migration-audit-linux-amd64
      - name: Upload Windows binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-windows
          path: bin/gh-migration-audit-windows-amd64.exe
  create_release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: ['package','test_and_lint']

    permissions:
      contents: write

    steps:
      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: package-windows
          path: bin
      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: package-macos
          path: bin
      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: package-linux
          path: bin
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/gh-migration-audit-darwin-amd64
            bin/gh-migration-audit-linux-amd64
            bin/gh-migration-audit-windows-amd64.exe
          generate_release_notes: true
  end_to_end_tests_macos:
    name: Run end to end tests (macOS/GitHub.com)
    needs: package
    runs-on: macos-latest
    env:
      check_name: End to end tests (macOS/GitHub.com)
    steps:
      - name: Download macOS binary
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-macos
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make macOS binary executable
        run: chmod +x bin/gh-migration-audit-darwin-amd64
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-darwin-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-darwin-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload macOS binary as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: macos_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}
  
  end_to_end_tests_linux:
    name: Run end to end tests (Linux/GitHub.com)
    runs-on: ubuntu-latest
    needs: package
    env:
      check_name: End to end tests (Linux/GitHub.com)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migration-audit-linux-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-linux-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-linux-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-linux-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: linux_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_windows:
    name: Run end to end tests (Windows/GitHub.com)
    needs: package
    runs-on: windows-latest
    env:
      check_name: End to end tests (Windows/GitHub.com)

    steps:
      - name: Download Windows binary
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-windows
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Audit a single repo
        run: bin/gh-migration-audit-windows-amd64.exe audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Audit repos owned by an organization
        run: bin/gh-migration-audit-windows-amd64.exe audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: bin/gh-migration-audit-windows-amd64.exe audit-repos --input-path input.csv --output-path output/audit-repos.csv --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_MIGRATION_AUDIT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: windows_github_com_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_linux_ghes:
    name: Run end to end tests (Linux/GitHub Enterprise Server)
    needs: package
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (Linux/GitHub Enterprise Server)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@09f2f74827fd3a8607589e5ad7f9398816f540fe
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migration-audit-linux-amd64
      - name: Audit a single repo
        run: ./bin/gh-migration-audit-linux-amd64 audit-repo --owner gh-migration-audit-sandbox --repo second-repo-with-actions-variables --output-path output/audit-repo.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Audit repos owned by an organization
        run: ./bin/gh-migration-audit-linux-amd64 audit-all --owner gh-migration-audit-sandbox --output-path output/audit-all.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Create input CSV for audit-repos
        run: |
          echo "owner,name
          gh-migration-audit-sandbox,second-repo-with-actions-variables" > input.csv
      - name: Print input CSV
        run: cat input.csv
      - name: Audit specific repos from input CSV
        run: ./bin/gh-migration-audit-linux-amd64 audit-repos --input-path input.csv --output-path output/audit-repos.csv --base-url ${{ secrets.GHES_BASE_URL }} --disable-telemetry
        env:
          GITHUB_TOKEN: ${{ secrets.GHES_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-github-enterprise-server-outputs
          path: output
      - name: Upload event as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: linux_ghes_event
            retention-days: 1
            path: ${{ github.event_path }}
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}


