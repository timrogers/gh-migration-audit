name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: ['v**']

permissions:
  contents: read

env:
  NODE_VERSION: 22.x

jobs:
  test_and_lint:
    name: Test and lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: npm run test

      # Upload test results, coverage report and original event as artifacts
      # So we can publish the results in a separate workflow

      # DO NOT MERGE THESE TWO STEPS INTO ONE
      # Upload are done in two different steps otherwise they will share the common base path
      # and the artifacts structure will be odd. Since on the first step we uploads just a file
      # it will be kept in the _root_ of the artifact, while the second step will upload directory structures
      - name: Upload Event
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: testfiles
            retention-days: 1
            path: ${{ github.event_path }}

      - name: Upload Test Results and Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: test-results-and-coverage
            retention-days: 1
            path: |
              test-results/**
              coverage/**

  package:
    name: Package binaries (${{ matrix.os}})
    strategy:
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    env:
      PLATFORM_OS_NAME: ${{ matrix.os == 'ubuntu' && 'linux' || matrix.os }}
      PLATFORM_NODE_EXECUTABLE_NAME: migration-audit-${{ matrix.os == 'macos' && 'darwin' || (matrix.os == 'windows' && 'win' || 'linux' )}}
      PLATFORM_GH_EXECUTABLE_NAME: gh-migration-audit-${{ matrix.os == 'macos' && 'darwin' || (matrix.os == 'windows' && 'windows' || 'linux' )}}
      PLATFORM_EXTENSION: ${{ matrix.os == 'macos' && '' || (matrix.os == 'windows' && '.exe' || '' )}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate binaries
        run: npm run packageSea ${{env.PLATFORM_OS_NAME}}

      - name: Rename x64 binary to conform to GitHub CLI extension rules
        run: mv bin/${{ env.PLATFORM_NODE_EXECUTABLE_NAME }}-x64${{env.PLATFORM_EXTENSION}} bin/${{ env.PLATFORM_GH_EXECUTABLE_NAME }}-amd64${{env.PLATFORM_EXTENSION}}

      - name: Rename ARM64 binary to conform to GitHub CLI extension rules
        run: mv bin/${{ env.PLATFORM_NODE_EXECUTABLE_NAME }}-arm64${{env.PLATFORM_EXTENSION}} bin/${{ env.PLATFORM_GH_EXECUTABLE_NAME }}-arm64${{env.PLATFORM_EXTENSION}}
      
      - name: Upload ARM64 binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{env.PLATFORM_OS_NAME}}-arm64
          path: bin/${{ env.PLATFORM_GH_EXECUTABLE_NAME }}-arm64${{env.PLATFORM_EXTENSION}}
      
      - name: Upload x64 binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{env.PLATFORM_OS_NAME}}-amd64
          path: bin/${{ env.PLATFORM_GH_EXECUTABLE_NAME }}-amd64${{env.PLATFORM_EXTENSION}}

  create_release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: ['package','test_and_lint']

    permissions:
      contents: write

    steps:
      - name: Download Windows x64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-windows-amd64
          path: bin
      - name: Download Windows ARM64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-windows-arm64
          path: bin
      - name: Download macOS x64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-macos-amd64
          path: bin
      - name: Download macOS ARM64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-macos-arm64
          path: bin          
      - name: Download Linux x64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-linux-amd64
          path: bin
      - name: Download Linux arm64 binary
        uses: actions/download-artifact@v4
        with:
          name: package-linux-arm64
          path: bin
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/gh-migration-audit-darwin-amd64
            bin/gh-migration-audit-darwin-arm64
            bin/gh-migration-audit-linux-amd64
            bin/gh-migration-audit-linux-arm64
            bin/gh-migration-audit-windows-amd64.exe
            bin/gh-migration-audit-windows-arm64.exe
          generate_release_notes: true
